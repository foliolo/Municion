apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: "androidx.navigation.safeargs.kotlin"
apply plugin: 'dagger.hilt.android.plugin'
apply plugin: 'com.google.firebase.crashlytics'
apply plugin: 'com.google.gms.google-services'

// Create a variable called keystorePropertiesFile, and initialize it to your
// keystore.properties file, in the rootProject folder .
//def keystorePropertiesFile = rootProject.file("keystore.properties")

// Initialize a new Properties() object called keystoreProperties.
//def keystoreProperties = new Properties()

// Load your keystore.properties file into the keystoreProperties object.
//keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

android {
//    signingConfigs {
//        config {
//            keyAlias keystoreProperties['keyAlias']
//            keyPassword keystoreProperties['keyPassword']
//            storeFile file(keystoreProperties['storeFile'])
//            storePassword keystoreProperties['storePassword']
//        }
//    }

    compileSdkVersion 30

    defaultConfig {
        applicationId "al.ahgitdevelopment.municion"
        buildToolsVersion = '30.0.0'
        minSdkVersion 23
        targetSdkVersion 30
        versionCode 2
        versionName '0.2.1'
        testInstrumentationRunner "al.ahgitdevelopment.municion.MyTestRunner"

        vectorDrawables.useSupportLibrary = true
        multiDexEnabled true
    }

    android {
        sourceSets {
            String sharedTestDir = 'src/sharedTest/java'
            test {
                java.srcDirs += sharedTestDir
            }
            androidTest {
                java.srcDirs += sharedTestDir
            }
        }
    }

    buildTypes {
        release {
//            signingConfig signingConfigs.config
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            debuggable false
            minifyEnabled true
            buildConfigField 'String', 'PASSWORD', '""'
        }
        debug {
//            signingConfig signingConfigs.config
            debuggable true
            minifyEnabled false
            buildConfigField 'String', 'PASSWORD', '"123456"'
        }
    }

    flavorDimensions "version"
    productFlavors {
//        demo {
//            dimension "version"
//            applicationIdSuffix ".demo"
//            versionNameSuffix "-demo"
//        }
//
//        spain {
//            dimension "version"
//            applicationIdSuffix ""
//            versionNameSuffix "-spain"
//        }

        global {
            dimension "version"
            applicationIdSuffix ".global"
            versionNameSuffix "-global"
        }
    }

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    buildFeatures {
        viewBinding true
        dataBinding true
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }

    configurations.all {
        resolutionStrategy {
            force "androidx.test:monitor:1.3.0"
        }
    }
}

configurations {
    ktlint
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    ktlint "com.pinterest:ktlint:0.39.0"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:${rootProject.ext.kotlin_version}"

    // Google
    implementation 'com.google.android.material:material:1.2.1'
    implementation "androidx.collection:collection-ktx:1.1.0"
    implementation 'androidx.constraintlayout:constraintlayout:2.0.2'
    implementation 'androidx.core:core-ktx:1.3.2'
    implementation 'androidx.preference:preference-ktx:1.1.1'
    implementation "androidx.fragment:fragment-ktx:1.2.5"
    debugImplementation 'androidx.fragment:fragment-testing:1.2.5'

    // Lifecycle
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:${rootProject.ext.androidx_lifecycle}"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:${rootProject.ext.androidx_lifecycle}"
    implementation "androidx.lifecycle:lifecycle-extensions:${rootProject.ext.androidx_lifecycle}"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:${rootProject.ext.androidx_lifecycle}"

    // Navigation
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.navigation:navigation-fragment-ktx:2.3.1'
    implementation 'androidx.navigation:navigation-ui-ktx:2.3.1'
    implementation 'androidx.vectordrawable:vectordrawable:1.1.0'

    // Coroutines
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-play-services:1.1.1'
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.9"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.9"
    testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.4.0-M1'

    // Hilt
    def hilt_version = "2.28-alpha"
    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-android-compiler:$hilt_version"
    def hilt_view_model = "1.0.0-alpha02"
    implementation "androidx.hilt:hilt-lifecycle-viewmodel:$hilt_view_model"
    kapt "androidx.hilt:hilt-compiler:$hilt_view_model"
    androidTestImplementation "com.google.dagger:hilt-android-testing:$hilt_version"
    kaptAndroidTest "com.google.dagger:hilt-android-compiler:$hilt_version"

    // Firebase
    implementation platform('com.google.firebase:firebase-bom:25.12.0')
    implementation 'com.firebaseui:firebase-ui-auth:6.2.0'
//    implementation 'com.google.android.gms:play-services-basement:17.5.0'
//    implementation 'com.google.android.gms:play-services-ads:19.5.0'
    implementation 'com.google.firebase:firebase-analytics-ktx:17.6.0'
    implementation 'com.google.firebase:firebase-auth-ktx:19.4.0'
    implementation 'com.google.firebase:firebase-core:17.5.1'
    implementation 'com.google.firebase:firebase-crashlytics:17.2.2'
    implementation 'com.google.firebase:firebase-database-ktx:19.5.0'
    implementation 'com.google.firebase:firebase-firestore-ktx:21.7.1'
//    implementation 'com.google.firebase:firebase-messaging:20.3.0'
    implementation 'com.google.firebase:firebase-storage-ktx:19.2.0'

    // Room components
    implementation "androidx.room:room-ktx:${rootProject.ext.room}"
    implementation "androidx.room:room-runtime:${rootProject.ext.room}"
    kapt "androidx.room:room-compiler:${rootProject.ext.room}"
    androidTestImplementation "androidx.room:room-testing:${rootProject.ext.room}"

    // Testing
    testImplementation 'junit:junit:4.13.1'
    androidTestImplementation 'junit:junit:4.13.1'

    // Core library
    androidTestImplementation 'androidx.test:core-ktx:1.3.0'
    androidTestImplementation "androidx.test:monitor:1.3.0"
    def archTestingVersion = '2.1.0'
    testImplementation "androidx.arch.core:core-testing:$archTestingVersion"
    androidTestImplementation "androidx.arch.core:core-testing:$archTestingVersion"

//    // Assertions
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.ext:truth:1.3.0'
    androidTestImplementation 'com.google.truth:truth:1.0'

//    // Espresso dependencies
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

    // Mockito
    testImplementation "org.mockito:mockito-core:$mockito_version"
    androidTestImplementation "org.mockito:mockito-core:$mockito_version"

}

kapt {
    correctErrorTypes true
}

task ktlint(type: JavaExec, group: "verification") {
    description = "Check Kotlin code style."
    classpath = configurations.ktlint
    main = "com.pinterest.ktlint.Main"
    args "src/**/*.kt"
    // to generate report in checkstyle format prepend following args:
    // "--reporter=plain", "--reporter=checkstyle,output=${buildDir}/ktlint.xml"
    // see https://github.com/pinterest/ktlint#usage for more
}
check.dependsOn ktlint

task ktlintFormat(type: JavaExec, group: "formatting") {
    description = "Fix Kotlin code style deviations."
    classpath = configurations.ktlint
    main = "com.pinterest.ktlint.Main"
    args "-F", "src/**/*.kt"
}

//android.applicationVariants.all { variant ->
//    renameAPK(variant)
//
//    // Disable google-services.json parsing for development builds
//    if (variant.flavorName == 'globalTest') {
//        project.tasks.getByName('process' + variant.name.capitalize() + 'GoogleServices').enabled = false
//    }
//}
//
//def renameAPK(variant) {
//    variant.outputs.all {
//        def variantName = variant.name
//        def versionName = variant.versionName
//        def versionCode = variant.versionCode
//        def applicationId = variant.applicationId
//        outputFileName = applicationId + "_" + (variantName != "release" ? variantName + "_" : "") + versionName + "_" + versionCode + ".apk"
//    }
//}
