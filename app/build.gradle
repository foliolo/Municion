apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: "androidx.navigation.safeargs.kotlin"
apply plugin: 'dagger.hilt.android.plugin'
apply plugin: 'com.google.firebase.crashlytics'
apply plugin: 'com.google.gms.google-services'

// Create a variable called keystorePropertiesFile, and initialize it to your
// keystore.properties file, in the rootProject folder .
//def keystorePropertiesFile = rootProject.file("keystore.properties")

// Initialize a new Properties() object called keystoreProperties.
//def keystoreProperties = new Properties()

// Load your keystore.properties file into the keystoreProperties object.
//keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

//    android.signingConfigs {
//        config {
//            keyAlias keystoreProperties['keyAlias']
//            keyPassword keystoreProperties['keyPassword']
//            storeFile file(keystoreProperties['storeFile'])
//            storePassword keystoreProperties['storePassword']
//        }
//    }

android {
    compileSdkVersion 30
    buildToolsVersion = '30.0.2'

    defaultConfig {
        applicationId "al.ahgitdevelopment.municion"
        minSdkVersion 23
        targetSdkVersion 30
        versionCode 4
        versionName '0.3.0'
        testInstrumentationRunner "al.ahgitdevelopment.municion.MyTestRunner"

        vectorDrawables.useSupportLibrary = true
        multiDexEnabled true

        javaCompileOptions {
            annotationProcessorOptions {
                arguments += [
//                        "room.schemaLocation":"$projectDir/schemas".toString(),
                        "room.incremental":"true",
                        "room.expandProjection":"true"]
            }
        }
    }

    android {
        sourceSets {
            String sharedTestDir = 'src/sharedTest/java'
            test {
                java.srcDirs += sharedTestDir
            }
            androidTest {
                java.srcDirs += sharedTestDir
            }
        }
    }

    buildTypes {
        release {
//            signingConfig signingConfigs.config
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            debuggable false
            minifyEnabled true
            buildConfigField 'String', 'PASSWORD', '""'
        }
        debug {
//            signingConfig signingConfigs.config
            debuggable true
            minifyEnabled false
            buildConfigField 'String', 'PASSWORD', '"123456"'
        }
    }

    flavorDimensions "version"
    productFlavors {
        global {
            dimension "version"
            applicationIdSuffix ".global"
            versionNameSuffix "-global"
        }
//        demo {
//            dimension "version"
//            applicationIdSuffix ".demo"
//            versionNameSuffix "-demo"
//        }
//
//        spain {
//            dimension "version"
//            applicationIdSuffix ""
//            versionNameSuffix "-spain"
//        }
    }

    sourceSets {
        globalDebug {
            res {
                srcDirs 'src/globalDebug/res'
            }
        }
        main {
            res {
                srcDirs 'src/main/res', 'src/main/res/2', 'src/main/resources'
            }
        }
        main.java.srcDirs += 'src/main/kotlin'
    }

    testOptions.unitTests {
        includeAndroidResources = true
    }

    hilt {
        enableTransformForLocalTests = true
    }

    buildFeatures {
        viewBinding true
        dataBinding true
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    configurations.all {
        resolutionStrategy {
            force "androidx.test:monitor:1.3.0"
        }
    }

    packagingOptions {
        exclude "**/attach_hotspot_windows.dll"
        exclude "META-INF/licenses/ASM"
        exclude 'META-INF/AL2.0'
        exclude 'META-INF/LGPL2.1'
        exclude "DebugProbesKt.bin"
    }
}

configurations {
    ktlint
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    ktlint "com.pinterest:ktlint:0.39.0"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:${rootProject.ext.kotlin_version}"

    // Google
    implementation 'com.google.android.material:material:1.2.1'
    implementation "androidx.collection:collection-ktx:1.1.0"
    implementation 'androidx.constraintlayout:constraintlayout:2.0.2'
    implementation 'androidx.core:core-ktx:1.3.2'
    implementation 'androidx.preference:preference-ktx:1.1.1'
//    def androidx_fragment = '1.2.5'
    def androidx_fragment = '1.3.0-beta01'
    implementation "androidx.fragment:fragment-ktx:$androidx_fragment"
//    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
//    implementation 'androidx.vectordrawable:vectordrawable:1.1.0'

    // Lifecycle
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:${rootProject.ext.androidx_lifecycle}"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:${rootProject.ext.androidx_lifecycle}"
    implementation "androidx.lifecycle:lifecycle-extensions:${rootProject.ext.androidx_lifecycle}"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:${rootProject.ext.androidx_lifecycle}"

    // Activity KTX for viewModels()
    implementation "androidx.activity:activity-ktx:1.1.0"

    // Navigation
    def nav_version = "2.3.1"
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"
    androidTestImplementation "androidx.navigation:navigation-testing:$nav_version"

    // Coroutines
    def coroutinesVersion = '1.4.0'
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-play-services:$coroutinesVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutinesVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutinesVersion"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutinesVersion"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutinesVersion"
    androidTestImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutinesVersion"

    // Hilt
    def hilt_version = '2.29.1-alpha'
    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-android-compiler:$hilt_version"
    kaptAndroidTest "com.google.dagger:hilt-android-compiler:$hilt_version"
    androidTestImplementation "com.google.dagger:hilt-android-testing:$hilt_version"
    def hilt_view_model = '1.0.0-alpha02'
    implementation "androidx.hilt:hilt-lifecycle-viewmodel:$hilt_view_model"
    kapt "androidx.hilt:hilt-compiler:$hilt_view_model"

    // Firebase
//    implementation platform('com.google.firebase:firebase-bom:25.12.0')
    implementation 'com.firebaseui:firebase-ui-auth:6.2.0'
//    implementation 'com.google.android.gms:play-services-basement:17.5.0'
//    implementation 'com.google.android.gms:play-services-ads:19.5.0'
    implementation 'com.google.firebase:firebase-analytics-ktx:18.0.0'
    implementation 'com.google.firebase:firebase-auth-ktx:20.0.0'
    implementation 'com.google.firebase:firebase-core:18.0.0'
    implementation 'com.google.firebase:firebase-crashlytics:17.2.2'
    implementation 'com.google.firebase:firebase-database-ktx:19.5.1'
    implementation 'com.google.firebase:firebase-firestore-ktx:22.0.0'
//    implementation 'com.google.firebase:firebase-messaging:20.3.0'
    implementation 'com.google.firebase:firebase-storage-ktx:19.2.0'

    // Room components
    implementation "androidx.room:room-ktx:${rootProject.ext.room}"
    implementation "androidx.room:room-runtime:${rootProject.ext.room}"
    kapt "androidx.room:room-compiler:${room}"
    testImplementation "androidx.room:room-testing:${rootProject.ext.room}"
    androidTestImplementation "androidx.room:room-testing:${rootProject.ext.room}"
/*
    // Testing
    debugImplementation 'junit:junit:4.13.1'

    // AndroidX Test - JVM testing
    androidTestImplementation "androidx.test:core-ktx:1.3.0"
    androidTestImplementation "androidx.test.ext:junit-ktx:1.1.2"
    androidTestImplementation "androidx.test:rules:1.3.0"
    androidTestImplementation "androidx.test.ext:truth:1.3.0"

    def archTestingVersion = '2.1.0'
    testImplementation "androidx.arch.core:core-testing:$archTestingVersion"
    androidTestImplementation "androidx.arch.core:core-testing:$archTestingVersion"

    // Espresso dependencies
    def espressoVersion = '3.3.0'
    implementation "androidx.test.espresso:espresso-idling-resource:$espressoVersion"
    androidTestImplementation "androidx.test.espresso.idling:idling-concurrent:$espressoVersion"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espressoVersion"

    // Mockito
    androidTestImplementation('com.linkedin.dexmaker:dexmaker-mockito:2.12.1')
    implementation("org.mockito:mockito-core:$mockito_version")
//    testImplementation "org.mockito:mockito-core:$mockito_version"
    androidTestImplementation("org.mockito:mockito-core:$mockito_version")
*/

    // Espresso idling-resources
    androidTestImplementation('com.linkedin.dexmaker:dexmaker-mockito:2.12.1')
    def espressoVersion = '3.3.0'
    implementation "androidx.test.espresso:espresso-idling-resource:$espressoVersion"
    androidTestImplementation "androidx.test.espresso.idling:idling-concurrent:$espressoVersion"

    debugImplementation "androidx.fragment:fragment-ktx:$androidx_fragment"
    debugImplementation "androidx.fragment:fragment-testing:$androidx_fragment"

    // Local Unit Tests
    implementation "androidx.test:core:1.3.0"
    testImplementation "junit:junit:4.13.1"
    testImplementation "org.hamcrest:hamcrest-all:1.3"
    testImplementation "androidx.arch.core:core-testing:2.1.0"
    testImplementation "org.robolectric:robolectric:4.4"
    testImplementation 'com.google.truth:truth:1.1'
    testImplementation "org.mockito:mockito-core:3.6.0"

    // Instrumented Unit Tests
    androidTestImplementation "androidx.test:runner:1.3.0"
    androidTestImplementation "androidx.test:rules:1.3.0"
    androidTestImplementation "junit:junit:4.13.1"
    androidTestImplementation "com.linkedin.dexmaker:dexmaker-mockito:2.12.1"
    androidTestImplementation "androidx.arch.core:core-testing:2.1.0"
    androidTestImplementation 'com.google.truth:truth:1.1'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation "androidx.test.espresso:espresso-core:$espressoVersion"
    androidTestImplementation "org.mockito:mockito-core:3.6.0"
    debugImplementation "androidx.fragment:fragment-testing:1.3.0-beta01"
}

kapt {
    correctErrorTypes true
}

task ktlint(type: JavaExec, group: "verification") {
    description = "Check Kotlin code style."
    classpath = configurations.ktlint
    main = "com.pinterest.ktlint.Main"
    args "src/**/*.kt"
    // to generate report in checkstyle format prepend following args:
    // "--reporter=plain", "--reporter=checkstyle,output=${buildDir}/ktlint.xml"
    // see https://github.com/pinterest/ktlint#usage for more
}
check.dependsOn ktlint

task ktlintFormat(type: JavaExec, group: "formatting") {
    description = "Fix Kotlin code style deviations."
    classpath = configurations.ktlint
    main = "com.pinterest.ktlint.Main"
    args "-F", "src/**/*.kt"
}

//android.applicationVariants.all { variant ->
//    renameAPK(variant)
//
//    // Disable google-services.json parsing for development builds
//    if (variant.flavorName == 'globalTest') {
//        project.tasks.getByName('process' + variant.name.capitalize() + 'GoogleServices').enabled = false
//    }
//}
//
//def renameAPK(variant) {
//    variant.outputs.all {
//        def variantName = variant.name
//        def versionName = variant.versionName
//        def versionCode = variant.versionCode
//        def applicationId = variant.applicationId
//        outputFileName = applicationId + "_" + (variantName != "release" ? variantName + "_" : "") + versionName + "_" + versionCode + ".apk"
//    }
//}
